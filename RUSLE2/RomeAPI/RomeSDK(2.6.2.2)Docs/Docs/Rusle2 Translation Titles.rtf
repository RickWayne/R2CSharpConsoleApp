{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times};}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Helvetica};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f114\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times};}
{\f115\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times};}{\f117\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times};}{\f118\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times};}
{\f119\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times};}{\f120\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times};}{\f121\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times};}
{\f122\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Times};}{\f124\fswiss\fcharset238\fprq2 Arial CE{\*\falt Helvetica};}{\f125\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Helvetica};}
{\f127\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Helvetica};}{\f128\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Helvetica};}{\f129\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Helvetica};}
{\f130\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Helvetica};}{\f131\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Helvetica};}{\f132\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Helvetica};}{\f134\fmodern\fcharset238\fprq1 Courier New CE;}
{\f135\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f137\fmodern\fcharset161\fprq1 Courier New Greek;}{\f138\fmodern\fcharset162\fprq1 Courier New Tur;}{\f139\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f140\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f141\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f142\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\rsidtbl \rsid163459\rsid415641\rsid533292\rsid615135\rsid818980
\rsid880271\rsid993521\rsid1119219\rsid1407608\rsid1602167\rsid2256306\rsid2367750\rsid2820394\rsid2821129\rsid3555113\rsid3613182\rsid3632244\rsid3768209\rsid4416456\rsid4466596\rsid4791106\rsid4926557\rsid5520490\rsid5587536\rsid5724775\rsid5907605
\rsid6049272\rsid6235401\rsid6381420\rsid6823098\rsid6913986\rsid7044608\rsid7274939\rsid7954079\rsid8266677\rsid8617567\rsid8796780\rsid8880062\rsid9842396\rsid10056333\rsid10836811\rsid10956135\rsid10965086\rsid11481251\rsid11734224\rsid11823710
\rsid11879339\rsid11940265\rsid12000410\rsid12001431\rsid12414398\rsid12729495\rsid13329723\rsid13530120\rsid13716355\rsid13902311\rsid14051662\rsid14092048\rsid14228441\rsid14625002\rsid14765408\rsid15099607\rsid15236795\rsid15286777\rsid15548896
\rsid16341804\rsid16396802\rsid16517730\rsid16662371}{\*\generator Microsoft Word 10.0.6850;}{\info{\title Rusle2 Translation Titles}{\author James P. Lyon}{\operator James P. Lyon}{\creatim\yr2006\mo1\dy5\hr21\min50}{\revtim\yr2009\mo2\dy13\hr15\min29}
{\printim\yr2006\mo1\dy13\hr14\min14}{\version45}{\edmins4528}{\nofpages6}{\nofwords2366}{\nofchars13489}{\*\company University of Tennessee}{\nofcharsws15824}{\vern16393}{\*\password 00000000}}{\*\xmlnstbl }
\paperw12240\paperh15840\margl720\margr720\margt1440\margb1440\gutter0 \widowctrl\ftnbj\aenddoc\grfdocevents0\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1701\dgvorigin1984
\dghshow1\dgvshow1\jexpand\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot11823710 \fet0{\*\wgrffmtfilter 013f}\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl\sectrsid5520490\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang 
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\qc \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\insrsid818980\charrsid615135 Rusle2 Translation Titles}{
\b\f1\insrsid5587536\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 200}{\f1\insrsid880271 9}{\f1\insrsid818980\charrsid615135 -}{\f1\insrsid880271 02}{\f1\insrsid818980\charrsid615135 -}{\f1\insrsid880271 13}{\f1\insrsid818980\charrsid615135 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\f1\insrsid818980\charrsid615135 
\par This document outlines }{\f1\insrsid615135\charrsid615135 the}{\f1\insrsid818980\charrsid615135  handling }{\f1\insrsid615135\charrsid615135 of }{\f1\insrsid818980\charrsid615135 translation titles in Rusle2.}{\f1\insrsid615135\charrsid615135 
\par This includes a new mechanism}{\f1\insrsid2821129\charrsid615135  motivated by difficulties that show}{\f1\insrsid5520490\charrsid615135 ed}{\f1\insrsid2821129\charrsid615135  up with users who use Rusle2 with multiple access levels}{
\f1\insrsid5520490\charrsid615135 , which Rusle2 was }{\f1\insrsid615135\charrsid615135 not originally}{\f1\insrsid5520490\charrsid615135  designed to handle}{\f1\insrsid2821129\charrsid615135 .}{\f1\insrsid818980 
\par }{\f1\insrsid15236795 
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15236795 {\b\f1\insrsid615135\charrsid615135 Overview
\par }{\f1\insrsid615135\charrsid615135 Rusle2 gets its user interface strings from an internal map of translat}{\f1\insrsid615135 ions. The user-visible strings are called}{\f1\insrsid615135\charrsid615135  }{\b\f1\insrsid615135\charrsid615135 titles}{
\f1\insrsid615135\charrsid615135 .}{\f1\insrsid615135  The internal strings which they are mapped to are generally the }{\b\f1\insrsid615135 names}{\f1\insrsid615135  of parts of the model, which are always in English.}{\f1\insrsid615135\charrsid615135 
 All model elements have internal names used in the code and in support files like "}{\f2\insrsid615135\charrsid16396802 catalog.rusle.xml}{\f1\insrsid615135\charrsid615135 ". The translated titles are mapped to these internal names.}{\f1\insrsid615135 

\par }{\f1\insrsid15236795\charrsid615135 
\par }{\f1\insrsid15236795 Editing and understanding Rusle2 translation files is not expected of end users \endash  it is an administrator's task}{\f1\insrsid12729495  only necessary when customizing Rusle2 or troubleshooting an installation}{
\f1\insrsid15236795 .}{\f1\insrsid15236795\charrsid615135 
\par }{\f1\insrsid615135\charrsid615135 
\par }{\b\f1\insrsid615135\charrsid615135 Implementation
\par }{\f1\insrsid15236795\charrsid615135 Title strings are loaded at startup from }{\b\f1\insrsid15236795\charrsid615135 text files}{\f1\insrsid15236795\charrsid615135 . Each key-title pair is on its own line and is TAB separated. The title strin
g can contain the sequences }{\f2\insrsid15236795\charrsid16396802 "\\n}{\f1\insrsid15236795\charrsid615135 " or }{\f2\insrsid15236795\charrsid16396802 "\\t}{\f1\insrsid15236795\charrsid615135 
", which will expand to a newline or tab when loaded. Lines that }{\f1\insrsid15236795 begin}{\f1\insrsid15236795\charrsid615135  with an asterisk }{\f1\insrsid15236795 (}{\f2\insrsid15236795\charrsid16396802 *}{\f1\insrsid15236795 ) }{
\f1\insrsid15236795\charrsid615135 are }{\f1\insrsid15236795 treated as comments and }{\f1\insrsid15236795\charrsid615135 ignored. An asterisk that appears }{\f1\insrsid8880062\charrsid615135 anywhere}{\f1\insrsid15236795\charrsid615135 
 after the first character is treated normally.}{\f1\insrsid15236795 
 The text files are loaded in a fixed order outlined below. If a key string has a translation in more than one file, then the file that is loaded last is the one that will be used. This allows the Rusle2 interface to be easily customized for different use
rs.
\par 
\par }{\f1\insrsid15236795\charrsid615135 Titles changed in these text files will change }{\f1\insrsid15236795 in the interface }{\f1\insrsid15236795\charrsid615135 the next time }{\f1\insrsid15236795 titles are reloaded}{\f1\insrsid15236795\charrsid615135 .}{
\f1\insrsid2820394  Titles can be forced to reload by hitting the [F5] key.}{\f1\insrsid15236795\charrsid615135  A name that is given a new title will appear everywhere in the application that uses that name. F
or example, most user templates have a tab named "}{\f2\insrsid15236795\charrsid16396802 INFO}{\f1\insrsid15236795\charrsid615135 ", which has a single title of "Info". If that title is changed, it will affect all user templates that have the name "}{
\f2\insrsid15236795\charrsid16396802 INFO}{\f1\insrsid15236795\charrsid615135 " in them. Any title changes should be sent back to the developers so they can be included in the text files distributed with Rusle2.}{\f1\insrsid15236795 
\par }{\f1\insrsid7044608 
\par The text files in which titles are stored have the extension "}{\f2\insrsid7044608\charrsid16396802 .txt}{\f1\insrsid7044608 
", and are UTF-8 encoded. For normal English titles this will therefore be an ASCII file, but for other languages a special Unicode-aware application may be required to edit or view the files. Microsoft Wordpad and Word are both capable of working with UT
F-8 files.
\par }{\f1\insrsid3555113 
\par }{\b\f1\insrsid3555113\charrsid3555113 Editing
\par }{\f1\insrsid3555113 Titles for tabs and parameters may be edited directly in the user interface. Select Rename from the context menu for an item. This will display a rename dialog, and the dialog will display the current name key }{\f1\insrsid12000410 
in the dialog text, and the title in the edit control.}{\f1\insrsid3555113  }{\f1\insrsid11940265 You may }{\f1\insrsid12000410 only }{\f1\insrsid11940265 alter }{\f1\insrsid12000410 the }{\f1\insrsid11940265 title}{\f1\insrsid12000410 
 in the rename dialog}{\f1\insrsid11940265 .
\par 
\par The }{\f1\insrsid11940265\charrsid12000410 Key}{\f1\insrsid11940265  is the name used internally. It will not be displayed unless there is no title. When this key is intended to be translated, it is usually all upper case with underscore
s (e.g. "TAB_NAME"). But it is legal to use a string such as "Tab Name".}{\f1\insrsid3555113 
\par }{\f1\insrsid11940265 
\par If a new title is set for a key, it will be added to the set of "user" titles. This set will be saved to the file "titles_user.txt" when the app closes, or at any time titles are reloaded, such as when the access level changes. In order for this}{
\f1\insrsid12000410  to work for other users using this template, these new title strings must be moved to a text file corresponding to an access level, and this text file given to the users who will use the template}{\f1\insrsid11940265 . }{
\f1\insrsid11940265\charrsid11940265 
\par }{\f1\insrsid15236795 
\par }{\b\f1\insrsid2820394\charrsid2820394 Compound Titles
\par }{\f1\insrsid615135\charrsid615135 Titles can be overridden to be context-specific. A compound key is built out of colon-separated parts. The application first looks for a title mapped to the full key. If it fails to find one, it then strips off the }{
\f1\insrsid10836811 first subkey and colon}{\f1\insrsid615135\charrsid615135 , and continues searching recursively}{\f1\insrsid10836811  until a title is found}{\f1\insrsid615135\charrsid615135 . Colons in title string}{\f1\insrsid7044608 s}{
\f1\insrsid615135\charrsid615135  have no special meaning.}{\f1\insrsid16517730 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid16517730 {\f1\ul\insrsid615135\charrsid15236795 Example}{\f1\insrsid615135\charrsid615135 : the name }{\f1\insrsid16517730 string }{
\f1\insrsid615135\charrsid615135 "}{\f2\insrsid615135\charrsid16396802 YES}{\f1\insrsid615135\charrsid615135 " is used }{\f1\insrsid16517730 to represent}{\f1\insrsid615135\charrsid615135  the value TRUE internally}{\f1\insrsid16517730 
 in all Boolean parameters}{\f1\insrsid615135\charrsid615135 . This maps to the title string "Yes" in "}{\f2\insrsid3632244\charrsid3632244 titles_model.txt}{\f1\insrsid615135\charrsid615135 ". }{\f1\insrsid16517730 T}{\f1\insrsid615135\charrsid615135 
his can be overridden for any }{\f1\insrsid16517730 model }{\f1\insrsid615135\charrsid615135 parameter }{\i\f2\insrsid16517730\charrsid16396802 P}{\i\f2\insrsid615135\charrsid16396802 aram}{\i\f2\insrsid16517730\charrsid16396802 N}{
\i\f2\insrsid615135\charrsid16396802 ame}{\f1\insrsid615135\charrsid615135  by adding a title}{\f1\insrsid16517730  mapped to the key}{\f1\insrsid615135\charrsid615135  "}{\i\f2\insrsid16517730\charrsid16396802 ParamName}{
\f2\insrsid615135\charrsid16396802 :YES}{\f1\insrsid615135\charrsid615135 " to one of the text files. When the title is shown for that parameter, the new title string will be displayed instead of the default title "Yes".}{\f1\insrsid16517730 
\par }{\f1\ul\insrsid615135\charrsid16517730 Example}{\f1\insrsid615135\charrsid615135 : Some }{\f1\insrsid8880062\charrsid615135 Boolean}{\f1\insrsid615135\charrsid615135  parameters show a button control. These have a title mapped to "}{
\i\f2\insrsid16517730\charrsid11879339 ParamName}{\f2\insrsid615135\charrsid11879339 :BUTTON_TEXT}{\f1\insrsid615135\charrsid615135 "}{\f1\insrsid16517730  for the text to display on the button}{\f1\insrsid615135\charrsid615135 .}{\f1\insrsid16517730 

\par }{\f1\ul\insrsid615135\charrsid16517730 Example}{\f1\insrsid615135\charrsid615135 : The parameter }{\f2\insrsid615135\charrsid11879339 RES_CLASS_NAMES}{\f1\insrsid615135\charrsid615135  has titles mapped to its integer values as "}{
\f2\insrsid615135\charrsid11879339 RES_CLASS_NAMES:1}{\f1\insrsid615135\charrsid615135 ".}{\f1\insrsid16517730 
\par }{\f1\ul\insrsid615135\charrsid16517730 Example}{\f1\insrsid615135\charrsid615135 : }{\f1\insrsid16517730 T}{\f1\insrsid615135\charrsid615135 he warning message }{\f2\insrsid615135\charrsid11879339 WRN_CELL_READONLY}{\f1\insrsid615135\charrsid615135 
 is overridden for different parameters to be able to give a }{\f1\insrsid16517730 parameter-specific}{\f1\insrsid615135\charrsid615135  message.}{\f1\insrsid16517730 
\par }{\f1\ul\insrsid615135\charrsid16517730 Example}{\f1\insrsid615135\charrsid615135 : }{\f1\insrsid16517730 T}{\f1\insrsid615135\charrsid615135 here are remote index parameters whose names are themselves compound names with a colon. These have form "}{
\i\f2\insrsid2367750\charrsid16396802 R}{\i\f2\insrsid615135\charrsid16396802 emote}{\i\f2\insrsid2367750\charrsid16396802 N}{\i\f2\insrsid615135\charrsid16396802 ame}{\f2\insrsid615135\charrsid11879339 :IDX}{\f1\insrsid615135\charrsid615135 
". These will use the display title mapped to "}{\f2\insrsid615135\charrsid11879339 IDX}{\f1\insrsid615135\charrsid615135 " unless a separate title entry is added for them.}{\f1\insrsid615135 
\par }{\f1\ul\insrsid2820394\charrsid2820394 Example}{\f1\insrsid2820394 : When a new control is added at run-time by a user, the name of the type of control is usually added as a prefix \endash  e.g. "}{\f1\insrsid2820394\charrsid14765408 BUTTON:}{
\i\f1\insrsid14765408\charrsid14765408 ParamName}{\f1\insrsid2820394 ". Other control prefixes are "TABLE:", "H_GRID:", "V_GRID:"}{\f1\insrsid1119219 , and "DRILL:"}{\f1\insrsid14765408 .}{\f1\insrsid2820394 
\par }{\f1\ul\insrsid8880062\charrsid14765408 Example}{\f1\insrsid14765408 
: When there is no file selected, the title corresponding to "#ENTRY_NONE" is displayed. This may be overridden for different parameters to display a different string, such as "no buffers".
\par }{\f1\ul\insrsid14765408\charrsid14765408 Example}{\f1\insrsid14765408 : Some parameters can display a different title when their unit changes. Their title will be mapped to "}{\i\f1\insrsid14765408\charrsid14765408 ParamName}{\f1\insrsid14765408 
:UNITS_SI" or "}{\i\f1\insrsid14765408\charrsid14765408 ParamName}{\f1\insrsid14765408 :UNITS_US".}{\f1\insrsid1119219  For example, the title for "}{\f1\insrsid1119219\charrsid1119219 ROOT_MASS:UNITS_US}{\f1\insrsid1119219 " may be }{\f1\insrsid8880062 
customized}{\f1\insrsid1119219  as "}{\f1\insrsid8880062\charrsid1119219 Root}{\f1\insrsid8880062  }{\f1\insrsid8880062\charrsid1119219 mass}{\f1\insrsid1119219\charrsid1119219  in top 4 in}{\f1\insrsid1119219 
". Note that this use of a suffix is to allow specializing the translation of
 the parameter name, not the unit name. There is no intention of allowing the title to fall back on the string "UNITS_US" if the compound name doesn't have a title. If we wanted to do that, we would place the unit name before the parameter name.}{
\f1\insrsid14765408\charrsid1119219 
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15236795 {\f1\insrsid15236795 
\par }{\f1\insrsid615135\charrsid615135 There are }{\b\f1\insrsid615135\charrsid615135 user titles}{\f1\insrsid615135\charrsid615135 
 which the user enters at runtime. These are added for any interface element which is created or renamed by the user. These are added to a separate titles map, which is saved to the file "}{\f1\insrsid3768209 titles_}{\f1\insrsid615135\charrsid615135 
user.txt" when the application closes normally.
\par }{\f1\insrsid15236795 
\par }{\b\f1\insrsid8796780\charrsid8796780 Message Boxes
\par }{\f1\insrsid615135\charrsid615135 The }{\f1\insrsid615135\charrsid15236795 message strings }{\f1\insrsid615135\charrsid615135 shown in }{\f1\insrsid615135\charrsid8796780 message box }{\f1\insrsid615135\charrsid615135 
dialogs generally have names which start with one of the standard prefixes: }{\f2\insrsid615135\charrsid5907605 ERR_}{\f1\insrsid615135\charrsid615135 , }{\f2\insrsid615135\charrsid5907605 QST_}{\f1\insrsid615135\charrsid615135 , }{
\f2\insrsid615135\charrsid5907605 INF_}{\f1\insrsid615135\charrsid615135 , }{\f2\insrsid615135\charrsid5907605 WRN_}{\f1\insrsid615135\charrsid615135 . These are used to automatically decide which type of message box }{\f1\insrsid15236795 icon }{
\f1\insrsid615135\charrsid615135 should be shown for that message name.
\par }{\f1\insrsid615135 
\par }{\f1\insrsid8796780 Message box calls in Rusle2 generally contain up to 2 additional arguments which are inserted into the string shown in the message box. These are inserted into the title string in place of special }{\f1\insrsid5907605 sequences}{
\f1\insrsid8796780  such as }{\f2\insrsid8796780\charrsid5907605 %s}{\f1\insrsid8796780 . The }{\f1\insrsid5907605 sequences }{\f2\insrsid8796780\charrsid5907605 %1}{\f1\insrsid5907605  and }{\f2\insrsid8796780\charrsid5907605 %2}{\f1\insrsid8796780 
 may also be used. The difference is that these strings can occur in any order in the title string, and may be repeated, whereas if }{\f2\insrsid8796780\charrsid5907605 %s}{\f1\insrsid8796780 
 occurs twice in a string, the first occurrence is always treated }{\f1\insrsid13716355 as }{\f2\insrsid13716355\charrsid5907605 %1}{\f1\insrsid5907605  and the second as }{\f2\insrsid13716355\charrsid5907605 %2}{\f1\insrsid13716355 . Ti
tle strings which use more than two inserted strings, or ones which are }{\f1\insrsid8880062 programmatically}{\f1\insrsid13716355  generated, often use special strings like }{\f2\insrsid13716355\charrsid5907605 <file>}{\f1\insrsid13716355 
 instead. These are message-specific and can't be changed without changing the application }{\f1\insrsid5724775 source }{\f1\insrsid13716355 code.}{\f1\insrsid8796780 
\par }{\f1\insrsid5907605 
\par }{\b\f1\insrsid5907605\charrsid5907605 Standard Prefixes
\par }{\f1\insrsid5907605 Some prefixes used in title keys have a special meaning within the Rusle2 application. Others are used by convention to make managing a large set of keys easier.
\par }\pard \ql \li0\ri0\widctlpar\tx2160\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16396802 {\f1\insrsid5907605 INF_}{\f1\insrsid16396802 \tab Message box string which displays information (}{\f1\insrsid8880062 exclamation}{
\f1\insrsid16396802  icon)}{\f1\insrsid5907605\charrsid615135 
\par }{\f1\insrsid5907605 ERR_}{\f1\insrsid16396802 \tab Message box string which displays and error (stop sign icon)}{\f1\insrsid5907605 
\par QST_}{\f1\insrsid16396802 \tab Message box string which displays a question (question icon)}{\f1\insrsid5907605 
\par WRN_}{\f1\insrsid16396802 \tab Message box string which displays a warning (yield icon)}{\f1\insrsid5907605 
\par STR_}{\f1\insrsid16396802 \tab Generic string}{\f1\insrsid5907605 
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15236795 {\f1\insrsid818980 
\par }{\f1\insrsid16396802 Title keys used within a DLL usually contain the name of the DLL in order to establish a namespace and prevent conflict between keys used. For example, }{\f2\insrsid16396802\charrsid16396802 STR_DATADLL_OPENDLG_OKAY}{
\f1\insrsid16396802  and }{\f2\insrsid16396802\charrsid16396802 ERR_SQLITE_BUSY}{\f1\insrsid16396802 . Note that the DLL name doesn't necessarily occur as a prefix, because the standard message box prefixes must occur first in order }{\f1\insrsid8880062 
to}{\f1\insrsid16396802  be recognized.
\par }{\f1\insrsid1602167 
\par }{\b\f1\insrsid1602167\charrsid1602167 Internal Titles
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1602167 {\f1\insrsid1602167\charrsid615135 There are }{\b\f1\insrsid1602167\charrsid615135 application-generated titles}{
\f1\insrsid1602167\charrsid615135  which are created by the application at run-time. }{\f1\insrsid1602167 These are not loaded or saved}{\f1\insrsid12001431 , and are not affected by reloading titles.}{\f1\insrsid1602167\charrsid615135 
\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14625002 {\f2\insrsid14625002\charrsid4416456 #APP}{\f2\insrsid14625002 NAME}{\f1\insrsid14625002\charrsid4416456 \tab The }{\f1\insrsid14625002 
module name of the app calling the core code (e.g. "Rusle2")}{\f1\insrsid14625002\charrsid4416456 
\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1602167 {\f2\insrsid1602167\charrsid4416456 #APPVERSION}{\f1\insrsid1602167\charrsid4416456 \tab The version of }{\f1\insrsid14625002 the}{
\f1\insrsid16341804  app calling the }{\f1\insrsid14625002 core code}{\f1\insrsid1602167\charrsid4416456 
\par }{\f2\insrsid1602167\charrsid4416456 #BUILDDATE}{\f1\insrsid1602167\charrsid4416456 \tab The build date of the application
\par }{\f2\insrsid1602167\charrsid4416456 #BUILDTIME}{\f1\insrsid1602167\charrsid4416456 \tab The build time of the application
\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4416456 {\f2\insrsid4416456\charrsid4416456 #DATADLL_VERSION_SQLITE}{\f1\insrsid4416456\charrsid4416456 \tab The version of the SQLit
e library used by the }{\f1\insrsid16341804 DataDLL}{\f1\insrsid4416456\charrsid4416456 
\par }{\f2\insrsid4416456\charrsid4416456 #DLLVERSION}{\f1\insrsid4416456\charrsid4416456 \tab The version of the }{\f1\insrsid16341804 RomeDLL (empty for Rusle2)}{\f1\insrsid4416456 
\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14625002 {\f2\insrsid14625002\charrsid4416456 #}{\f2\insrsid14625002 ROMENAME}{\f1\insrsid14625002\charrsid4416456 \tab The }{\f1\insrsid14625002 
name of the module of the core code (e.g. "RomeDLL")}{\f1\insrsid14625002\charrsid4416456 
\par }{\f2\insrsid14625002\charrsid4416456 #}{\f2\insrsid14625002 ROME}{\f2\insrsid14625002\charrsid4416456 VERSION}{\f1\insrsid14625002\charrsid4416456 \tab The version of }{\f1\insrsid14625002 the module containing the core code}{
\f1\insrsid14625002\charrsid4416456 
\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6235401 {\i\f2\insrsid6235401\charrsid4416456 ID}{\f2\insrsid6235401\charrsid4416456 :#SHOWNONCE}{\f1\insrsid6235401\charrsid4416456 \tab 
Has a message with }{\i\f2\insrsid6235401\charrsid4416456 ID}{\f1\insrsid6235401\charrsid4416456  already been shown? Set to "1" for true.
\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid1602167 {\f2\insrsid1602167\charrsid4416456 #STARTTIME}{\f1\insrsid1602167\charrsid4416456 \tab The start time of the current application instance

\par }\pard \ql \li0\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4416456 {\f2\insrsid4416456\charrsid4416456 #VERSION_TOMCRYPT}{\f1\insrsid4416456\charrsid4416456 \tab The version of the libtomcrypt library

\par }{\f2\insrsid4416456\charrsid4416456 #VERSION_ZLIB}{\f1\insrsid4416456\charrsid4416456 \tab The version of the zlib library
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15236795 {\f1\insrsid993521 
\par There are also }{\f1\insrsid4416456 internal }{\b\f1\insrsid993521\charrsid4416456 hard-coded titles }{\f1\insrsid993521 which are built into the application. These are for critical errors that might occur before the title mechanism is fully }{
\f1\insrsid8880062 initialized}{\f1\insrsid993521  in Rusle2, or in case all translation files have been removed, so that important error messages can still be shown.
\par 
\par }{\b\f1\insrsid993521\charrsid993521 API Hacks}{\b\f1\insrsid1602167\charrsid993521 
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid993521 {\f1\insrsid993521 T
he title interface is currently used as a back door for private purposes, to allow passing in command strings to Rusle2 through the scripting APIs when there is no existing API function. All such hacks are unsupported and subject to change. However, we wi
ll mention one here: }{\b\i\f2\insrsid993521\charrsid993521 ParamName}{\b\f2\insrsid993521\charrsid993521 :#ATTR_UNITS}{\f1\insrsid993521  returns the internal name of the default unit for this param (e.g "U_MM" instead of the title "mm").
\par }{\f1\insrsid14228441 
\par }{\b\f1\insrsid14228441\charrsid14228441 Unit Test}{\b\f1\insrsid4466596 s}{\b\f1\insrsid14228441\charrsid14228441 
\par }{\f1\insrsid14228441 (Developers only) Rusle2 now (2006-07) uses the titles map to control which unit tests run in a testi
ng version (usually a Debug build). This allows easily turning unit tests on/off without having to modify the source code. These special titles are usual placed in a separate file "titles_core_tests.txt".}{\f1\insrsid11481251  }{\f1\insrsid4466596 
Special title strings are searched for in order}{\f1\insrsid11481251 :}{\f1\insrsid14228441 
\par }{\f1\insrsid11481251 1)}{\f1\insrsid14228441 
 The title for key "UnitTests:CanRun" controls whether any unit tests are run. If it has a string value of "0" or any string which is 0 when converted to floating point, no tests will run. Any non-numerical string will be treated as 0. If this key is not 
present, it has no effect.
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11481251 {\f1\insrsid11481251 
2) The title for the name of each test (e.g. "CFloat::UnitTest") is checked before the test runs. Its value is converted to a floating point number and treated as a }{\f1\insrsid8880062 probability}{\f1\insrsid11481251 
. This probability is converted to a true / false value and used to decide if that test should run. Any value <= 0 will prevent the test from running.
\par }\pard \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid993521 {\f1\insrsid11481251 3)}{\f1\insrsid14228441 
 The title for key "UnitTests:Default" specifies the default probability of any unit test running. Its value is converted to a floating point number and treated as a }{\f1\insrsid8880062 probability}{\f1\insrsid14228441 
. Any value <= 0 will prevent all tests from running.
\par }{\f1\insrsid11481251 4) If no titles can be used to get a probability for a test to run, then a hard-coded default is used. }{\f1\insrsid4466596 In}{\f1\insrsid11481251  Debug mode tests}{\f1\insrsid4466596  are always run}{\f1\insrsid11481251 , and }{
\f1\insrsid4466596 in}{\f1\insrsid11481251  Release mode no tests}{\f1\insrsid4466596  are run}{\f1\insrsid11481251 .}{\f1\insrsid14228441 
\par }{\f1\insrsid3613182 
\par }{\b\f1\insrsid3613182\charrsid3613182 Configuration
\par }{\f1\insrsid3613182 (Developers only) Rusle2 reads some strings from the titles map to store dynamic configuration settings. This includes the following:
\par }\pard \ql \li0\ri0\widctlpar\tx4320\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3613182 {\f1\insrsid3613182\charrsid3613182 App.Engine.Logging}{\f1\insrsid3613182 \tab controls special logging of engine operations
\par }{\f1\insrsid3613182\charrsid3613182 App.Files.BadFileMapEnabled}{\f1\insrsid3613182 \tab controls use of a map to replace bad filenames on loading
\par }{\f1\insrsid3613182\charrsid3613182 App.LogFiles.MaxSize.DEFAULT}{\f1\insrsid3613182 \tab sets the default maximum size of log files
\par }{\f1\insrsid3613182\charrsid3613182 App.LogFiles.MaxSize.}{\i\f1\insrsid3613182 LogName}{\f1\insrsid3613182 \tab sets the default maximum size of a log file (e.g. LOG_HIST)
\par }{\f1\insrsid3613182\charrsid3613182 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\b\f1\insrsid818980\charrsid615135 Requirements
\par }{\f1\insrsid818980\charrsid615135 Support multiple }{\f1\insrsid163459\charrsid615135 translation sets for }{\f1\insrsid818980\charrsid615135 a single user}{\f1\insrsid5520490\charrsid615135  on a single installation of Rusle2}{
\f1\insrsid818980\charrsid615135 . For example, "}{\f2\insrsid818980\charrsid5907605 R2_NRCS_Fld_Office}{\f2\insrsid5907605\charrsid5907605 .txt}{\f1\insrsid818980\charrsid615135 " and "}{\f2\insrsid818980\charrsid5907605 R2_WI_Const}{
\f2\insrsid5907605\charrsid5907605 .txt}{\f1\insrsid818980\charrsid615135 ".
\par Don't require the user to manually configure what files to load }{\f1\insrsid163459\charrsid615135 or}{\f1\insrsid818980\charrsid615135  in what order.
\par Provide a well-defined plan for deciding where }{\f1\insrsid163459\charrsid615135 translation strings}{\f1\insrsid818980\charrsid615135  go}{\f1\insrsid163459\charrsid615135 , and better separation of strings by model, access level, etc}{
\f1\insrsid818980\charrsid615135 .
\par Anticipate future }{\f1\insrsid5520490\charrsid615135 needs}{\f1\insrsid13716355  -}{\f1\insrsid818980\charrsid615135  multiple languages}{\f1\insrsid13530120\charrsid615135 , multiple models,}{\f1\insrsid818980\charrsid615135  shared installation}{
\f1\insrsid13530120\charrsid615135 s}{\f1\insrsid13716355  -}{\f1\insrsid818980\charrsid615135  so these don't cause problems later.
\par 
\par }{\b\f1\insrsid818980\charrsid615135 Mechanism
\par }{\f1\insrsid163459\charrsid615135 There will be a hard-coded loading order which should be general enough to handle all cases. No user intervention will be required to select what files load, and in what order. (See below)
\par Each access level will have its own translation file associated with it, and mapped to the access name. For users that use multiple access levels, changing the access level will dynamically change the loaded translations to match.
\par There }{\f1\insrsid13716355 is}{\f1\insrsid163459\charrsid615135  no hard-coded list of files to open. }{\f1\insrsid7954079\charrsid615135 Rusle2}{\f1\insrsid163459\charrsid615135  will scan all text files in }{\f1\insrsid7954079\charrsid615135 specific}{
\f1\insrsid163459\charrsid615135  director}{\f1\insrsid5520490\charrsid615135 ies}{\f1\insrsid163459\charrsid615135 , and load those that }{\f1\insrsid7954079\charrsid615135 match}{\f1\insrsid163459\charrsid615135  the }{\f1\insrsid7954079\charrsid615135 
file}{\f1\insrsid163459\charrsid615135 name formats: "}{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid163459\charrsid5907605 *.txt}{\f1\insrsid163459\charrsid615135 " and "}{\f2\insrsid163459\charrsid5907605 R2_*.txt}{
\f1\insrsid163459\charrsid615135 ". If a file is missing it is not an error.
\par All models and DLLs }{\f1\insrsid13716355 [may] }{\f1\insrsid163459\charrsid615135 have their own translation file, to make replacing and editing them easier.
\par }{\f1\insrsid818980\charrsid615135 Load files alphabetically}{\f1\insrsid15548896\charrsid615135  for each class}{\f1\insrsid818980\charrsid615135 , so}{\f1\insrsid5520490\charrsid615135  }{\f1\insrsid818980\charrsid615135 an "inherited"
 file overwrites translations in its "parent" file}{\f1\insrsid5520490\charrsid615135  (e.g. "}{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid5520490\charrsid5907605 model_RUSLE2.txt}{\f1\insrsid5520490\charrsid615135 " overwrites "}{
\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid5520490\charrsid5907605 model.txt}{\f1\insrsid5520490\charrsid615135 ")}{\f1\insrsid818980\charrsid615135 .
\par }{\f1\insrsid2821129\charrsid615135 Translation}{\f1\insrsid8266677\charrsid615135  f}{\f1\insrsid818980\charrsid615135 iles for different models will have }{\f1\insrsid8266677\charrsid615135 names}{\f1\insrsid818980\charrsid615135  "}{
\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 model_}{\i\f2\insrsid818980\charrsid5907605 ModelName}{\f2\insrsid5907605\charrsid5907605 .txt}{\f1\insrsid818980\charrsid615135 ", and submodels can be "inherited" from the}{
\f1\insrsid5520490\charrsid615135 m}{\f1\insrsid818980\charrsid615135  as "child" filenames.
\par The different "}{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 model_*}{\f2\insrsid5907605\charrsid5907605 .txt}{\f1\insrsid818980\charrsid615135 
" files should be independent (not overlap). This will prevent models from interfering with }{\f1\insrsid2821129\charrsid615135 each other}{\f1\insrsid818980\charrsid615135 
. Later we could introduce a mechanism which adds a model prefix of some kind when looking up keys "}{\i\f2\insrsid818980\charrsid5907605 ModelName}{\f2\insrsid818980\charrsid5907605 :}{\i\f2\insrsid818980\charrsid5907605 Key}{
\f1\insrsid818980\charrsid615135 "}{\f1\insrsid8266677\charrsid615135  in case this becomes necessary}{\f1\insrsid818980\charrsid615135 .
\par The NRCS translations will be the "standard" ones, so any "}{\f2\insrsid818980\charrsid5907605 R2_NRCS.txt}{\f1\insrsid818980\charrsid615135 " file will be mostly empty.}{\f1\insrsid8266677\charrsid615135  }{\f1\insrsid5520490\charrsid615135 O}{
\f1\insrsid8266677\charrsid615135 ne }{\f1\insrsid5520490\charrsid615135 will be present }{\f1\insrsid8266677\charrsid615135 for documentation purposes.}{\f1\insrsid818980\charrsid615135 
\par }{\f1\insrsid8266677\charrsid615135 Don't support }{\f1\insrsid13530120\charrsid615135 an }{\f1\insrsid8266677\charrsid615135 #include mechanism. There is no need right now, and it introduces all kinds of complexity. }{\f1\insrsid5520490\charrsid615135 
The}{\f1\insrsid8266677\charrsid615135  tree order makes things very easy to understand.
\par }{\f1\insrsid818980\charrsid615135 
\par }{\b\f1\insrsid8266677\charrsid615135 Multiple Languages (}{\b\f1\insrsid4926557\charrsid615135 un}{\b\f1\insrsid8266677\charrsid615135 implement}{\b\f1\insrsid4926557\charrsid615135 ed}{\b\f1\insrsid8266677\charrsid615135 )}{
\b\f1\insrsid818980\charrsid615135 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\tx1440\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\f1\insrsid818980\charrsid615135 
If there are multiple languages being used, first load a default "fallback" language (generally }{\f1\insrsid2821129\charrsid615135 English}{\f1\insrsid818980\charrsid615135 ), to make sure every key has a translation. Then load the major }{
\f1\insrsid2821129\charrsid615135 language}{\f1\insrsid818980\charrsid615135  type. Then load any }{\f1\insrsid2821129\charrsid615135 variants}{\f1\insrsid818980\charrsid615135 .
\par Example:\line 0) }{\f2\insrsid818980\charrsid5907605 en}{\f1\insrsid818980\charrsid615135 \tab (default)\line 1) }{\f2\insrsid818980\charrsid5907605 fr}{\f1\insrsid818980\charrsid615135 \tab French\line 2) }{\f2\insrsid818980\charrsid5907605 fr_CH}{
\f1\insrsid818980\charrsid615135 \tab }{\f1\insrsid2821129\charrsid615135 Swiss}{\f1\insrsid818980\charrsid615135  French
\par For multiple language support, the different translation files should be in different directories named}{\f1\insrsid8266677\charrsid615135  by their }{\f1\insrsid163459\charrsid615135 2-letter}{\f1\insrsid8266677\charrsid615135  name \endash  e.g. "}{
\f2\insrsid8266677\charrsid5907605 en}{\f1\insrsid8266677\charrsid615135 ", "}{\f2\insrsid8266677\charrsid5907605 fr}{\f1\insrsid8266677\charrsid615135 ", "}{\f2\insrsid8266677\charrsid5907605 fr_CH}{\f1\insrsid8266677\charrsid615135 " as above}{
\f1\insrsid10965086\charrsid615135  (RFC 1766)}{\f1\insrsid8266677\charrsid615135 .}{\f1\insrsid818980\charrsid615135 
\par }{\f1\insrsid8266677\charrsid615135 For each }{\f1\insrsid4926557\charrsid615135 language}{\f1\insrsid8266677\charrsid615135 ,}{\f1\insrsid4926557\charrsid615135  load all files before loading the next language,}{\f1\insrsid8266677\charrsid615135  us}{
\f1\insrsid4926557\charrsid615135 ing}{\f1\insrsid8266677\charrsid615135  the loading order specified above}{\f1\insrsid11734224\charrsid615135 .}{\f1\insrsid8266677\charrsid615135 
\par }{\f1\insrsid6913986\charrsid615135 The language directory loading order should be user customizable, so a user could specify the order }{\f2\insrsid6913986\charrsid16396802 jp}{\f1\insrsid6913986\charrsid615135 , }{\f2\insrsid6913986\charrsid16396802 fr}
{\f1\insrsid6913986\charrsid615135 , }{\f2\insrsid6913986\charrsid16396802 en}{\f1\insrsid16396802 , for example}{\f1\insrsid6913986\charrsid615135 .}{\f1\insrsid11734224\charrsid615135 
\par }{\f1\insrsid4926557\charrsid615135 T}{\f1\insrsid6913986\charrsid615135 he "language" mechanism }{\f1\insrsid4926557\charrsid615135 should be able }{\f1\insrsid6913986\charrsid615135 to handle general }{\f1\insrsid8880062\charrsid615135 subclasses}{
\f1\insrsid6913986\charrsid615135 , such as }{\f2\insrsid6913986\charrsid5907605 en_agr}{\f1\insrsid6913986\charrsid615135  and }{\f2\insrsid6913986\charrsid5907605 en_const}{\f1\insrsid6913986\charrsid615135  for agriculture and construction}{
\f1\insrsid14092048\charrsid615135 . This }{\f1\insrsid4926557\charrsid615135 allows}{\f1\insrsid14092048\charrsid615135  a user to have }{\f1\insrsid4926557\charrsid615135 multiple}{\f1\insrsid14092048\charrsid615135 
 translations for a fixed access level.}{\f1\insrsid6913986\charrsid615135 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\f1\insrsid8266677\charrsid615135 
\par }{\b\f1\insrsid8266677\charrsid615135 Template Titles (}{\b\f1\insrsid4926557\charrsid615135 un}{\b\f1\insrsid8266677\charrsid615135 implement}{\b\f1\insrsid4926557\charrsid615135 ed}{\b\f1\insrsid8266677\charrsid615135 )
\par }{\f1\insrsid8266677\charrsid615135 If desired, we could add a map of translation titles directly inside a template. This would allow that template to override or supply some translations when it was loaded. The loading order for this is specified below.}
{\f1\insrsid818980\charrsid615135 
\par }{\f1\insrsid8266677\charrsid615135 
\par }{\b\f1\insrsid1407608\charrsid615135 Standard }{\b\f1\insrsid818980\charrsid615135 Text Files:}{\b\f1\insrsid8266677\charrsid615135 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\tx3600\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid5907605 {\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 core}{\f1\insrsid818980\charrsid615135 \tab // }{
\f1\insrsid16396802 titles used by the main app and visual interface}{\f1\insrsid8266677\charrsid615135 
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 core_datadll}{\f1\insrsid818980\charrsid615135 \tab // }{\f1\insrsid16396802 titles used by the DataDLL}{\f1\insrsid8266677\charrsid615135 
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 core_}{\i\f2\insrsid818980\charrsid5907605 DLLName}{\f1\insrsid8266677\charrsid615135 \tab // }{\f1\insrsid16396802 titles used by a DLL - }{\f1\insrsid8266677\charrsid615135 
e.g. R2ImportNasis
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 model}{\f1\insrsid818980\charrsid615135 \tab // }{\f1\insrsid16396802 titles used by the model and RomeDLL core}{\f1\insrsid8266677\charrsid615135 
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 model_RUSLE2}{\f1\insrsid13530120\charrsid615135 \tab // }{\f1\insrsid16396802 titles for the RUSLE2 model}{\f1\insrsid8266677\charrsid615135 
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 model_}{\i\f2\insrsid1407608\charrsid5907605 ModelName}{\f1\insrsid1407608\charrsid615135 \tab // }{\f1\insrsid16396802 titles for a specific}{\f1\insrsid2256306 
 additional model}{\f1\insrsid8266677\charrsid615135 
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid818980\charrsid5907605 user}{\f1\insrsid818980\charrsid615135 \tab // }{\f1\insrsid2256306 titles edited by the user at runtime}{\f1\insrsid818980\charrsid615135 
\par }\pard \ql \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\f1\insrsid818980\charrsid615135 
\par }{\b\f1\insrsid818980\charrsid615135 Fixed Loading Order:}{\b\f1\insrsid8266677\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 0) internal}{\f1\insrsid8266677\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 1) core (app & DLLs)}{\f1\insrsid8266677\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 2) access}{\f1\insrsid8266677\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 3) template (}{\f1\insrsid4926557\charrsid615135 un}{\f1\insrsid818980\charrsid615135 implemented)}{\f1\insrsid8266677\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 4) user
\par }{\f1\insrsid10056333\charrsid615135 
\par The above loading order also specifies how titles override }{\f1\insrsid6381420 each other}{\f1\insrsid10056333\charrsid615135 . Each level overrides the level before it. }{\f1\insrsid7274939\charrsid615135 For example,}{
\f1\insrsid10056333\charrsid615135  a "user" title will override an "access" title.}{\f1\insrsid10056333 
\par }{\f1\insrsid1119219 Titles also override }{\f1\insrsid6381420 each other}{\f1\insrsid1119219  in loading order within a file. So if the same key appears twice in a file, the one which is read last in the file will overwrite previous ones.}{
\f1\insrsid1119219\charrsid615135 
\par }{\f1\insrsid818980\charrsid615135 
\par }{\b\f1\insrsid12414398\charrsid615135 Example files and loading order:
\par }\pard \ql \fi-180\li180\ri0\widctlpar\tx2880\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\f1\insrsid12414398\charrsid615135 (not all of these files need to exist, but this is the order they would be loaded in)

\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid12414398\charrsid5907605 core
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid12414398\charrsid5907605 core_datadll
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid880271 core_}{\f2\insrsid12414398\charrsid5907605 R2ImportNasis
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid12414398\charrsid5907605 model
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid12414398\charrsid5907605 model_RUSLE2
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid12414398\charrsid5907605 model_WEPS
\par R2
\par R2_NRCS
\par R2_NRCS_Fld_Office
\par }{\f2\insrsid415641\charrsid5907605 titles_}{\f2\insrsid12414398\charrsid5907605 user
\par }\pard \ql \fi-180\li180\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin180\itap0\pararsid15236795 {\f1\insrsid12414398\charrsid615135 
\par }}